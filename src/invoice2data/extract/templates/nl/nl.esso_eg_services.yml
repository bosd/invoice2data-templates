# -*- coding: utf-8 -*-
# SPDX-License-Identifier: MIT
# Current Status: Working on invoice with one product lines. 
# importing of amount and qty working, but no product.
# handling of multiple lines untested.
issuer: EG Services (Netherlands) B.V.
fields:
  amount:
    parser: regex
    regex:
      - TOTAAL\s+€.?\s+(\d+.\d{2})
      - (?i)Amex\s+€.?\s+(\d{1,3}.\d{2})
    type: float
  amount_untaxed:
    parser: regex
    regex:
      - \d{2}.\d{2}\s+. (\d+.\d{2})\s+. \d+.\d{2}
    type: float
    group: sum
  date: (\d{1,2}-\d{2}-\d{4}\s+\d{1,2}.\d{2}.\d{2})
  invoice_number: (\d{1,2}-\d{2}-\d{4})\s+\d{1,2}.\d{2}.\d{2}
  static_vat: NL001784249B01
  payment_method:
    - (?i)(AMEX)
    - (VISA)
    - (MCARD)
    - (CONTANT)
    - (KAS):\s.\s\d+\.\d+
lines:
    start: BTW type
    end: (\d{1,2}-\d{2}-\d{4})\s+\d{2}.\d{2}.\d{2}
    line: (?P<btwtype>\d)\s(?P<percent>\d{2}.\d{2})\s+. (?P<amount_untaxed>\d+.\d{2})\s+. (?P<btwbedrag>\d+.\d{2})
# code below works, but without product
    start: BEDRAG
    end: TOTAAL\s
    line: (?P<name>POMP.*) (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
    first_line: '(?P<product>\w+).?\s+.\s+[E|€]\s*\d+.\d{0,2}'
#    line: .* (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
    types:
      qty: float
      price_unit: float
keywords:
#  - NL.+1784249 # using wildcards escape ocr errors
  - eurogarages
  - EG GROUP
options:
  currency: EUR
  languages:
    - nl
  decimal_separator: ','
  date_formats:
    - '%m-%d-%Y hh:mm'
# Using replace to correct tesseract ocr
# in Odoo use the following product names 'LPG','E10 (Euro 95)'
  replace:
    - ['L.p.9.' ,'LPG']
    - ['L.P.G.' ,'LPG']
    - ['L.P.9.' ,'LPG']
    - ['L.P.\s' ,'LPG']
    - ['Euro 95 E10' ,'E10 (Euro 95)']
    - ['LPLG' ,'LPG']
    - ['Contant' ,'CONTANT']
    - ['\s[l|&|@]' ,' ℓ']
    - ['B.W', 'BTW']
    - [', ', ',']
    - ['°', ' ']
    - ['©', ' ']
    - [',.', ',']
    - ['(\s)([0-9]+)\.([0-9]{2})(\s)', '\1\2,\3\4'] # workaround for ocr inconsistancy on comma and dot detection
# debug lines for future use to incorporate products
# \n(?P<artikel>.?[a-zA-Z].*)[[:space:]]€ (\d+.\d{2})\n
