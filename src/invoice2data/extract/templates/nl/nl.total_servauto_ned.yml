# -*- coding: utf-8 -*-
# SPDX-License-Identifier: MIT
# Current Status: Working with pump name oninvoice  line instead of product
issuer: Servauto Ned. B.V.
fields:
  amount:
    parser: regex
    regex:
      - TOTAAL.?\s+.\s+(\d{1,3}[,]\d{2})
      - Bedrag\s+(\d{1,3}.\d{2}) EUR
      - (?i)Amex\s+€.?\s+(\d{1,3}.\d{2})
    type: float
  amount_untaxed:
    parser: regex
    regex:
      - 21.?00\s+.\s+(\d{1,3}.\d{1,2})\s+.+\s+\d{1,3}.\d{1,2}
      - 9.?00\s+.\s+(\d{1,3}.\d{1,2})\s+.+\s+\d{1,3}.\d{1,2}
    type: float
    group: sum
  amount_tax:
    parser: regex
    regex:
      - 21.?00\s+.\s+\d{1,3}.\d{1,2}\s+.\s+(\d{1,3}.\d{1,2})
      - 9.?00\s+.\s+\d{1,3}.\d{1,2}\s+.\s+(\d{1,3}.\d{1,2})
    type: float
    group: sum
  date:
    parser: regex
    regex:
      - (\d{1,2}[.|-|\/]\d{2}[.|-|\/]\d{4})\s
      # - (\d{1,2}[.]\d{2}[.]\d{4})\s
      - (\d{1,2}-\d{2}-\d{4})\s+\d{1,2}.\d{2}.\d{2}
    type: date
  invoice_number: (\d{1,2}[.|-|\/]\d{2}[.|-|\/]\d{4})\s
# (\d{1,2}-\d{2}-\d{4})\s+\d{1,2}.\d{2}.\d{2}
  static_vat: NL003588567B01
  payment_method:
    - (AMEX)
    - (VISA)
    - (MCARD)
    - (CONTANT)
    - (KAS):\s.\s\d+\.\d+
lines:
# code below works, but without product
    start: BEDRAG
    end: TOTAAL\s
#    line: .* (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
#    line: \n.*\x{0028}/(?P<name>\w+.*) (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
    first_line: '.(?P<product>\w+).?\s+\d\s[E|€]\s*\d+.\d{0,2}'
# below code is pump name
#    line: (?P<name>POMP.*) (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
    line: (?P<name>POMP.*) (?P<qty>\d+.\d{2})\s.+\s.\s(?P<price_unit>\d.\d{2,3})
    types:
      qty: float
      price_unit: float
#    line: '^(?:(?P<uom>L))$'
# below code is wrong pump name and with product field
#    line: .(?P<product>\w*).?\s+.\s.\s+\d+.\d{0,2}\n.?\s+.(?P<name>POMP.*) (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
# Above one modified for file without line breaks
#    line: .(?P<product>\w*).?\s+.\s.\s+\d+.\d{0,2}.*.?\s+.(?P<name>POMP.*) (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
# same as above optimized for (non optimized string)
#    line: .(?P<product>(\w+(?:\S|[.]\w\w+|\n)*)).?\s+.\s.\s+\d+.\d{0,2}.*.?\s+.(?P<name>POMP.*) (?P<qty>\d+.\d{2})\s. .\s+€ (?P<price_unit>\d.\d{3})
# only caputring product
#    line: .(?P<product>\w+).?\s+\d\s[E|€]\s+\d+.\d{0,2}
#     first_line: '.(?P<product>\w+).?\s+\d\s[E|€]\s+\d+.\d{0,2}'
keywords:
  - TOTAL
  - Servau
  - €
options:
  currency: EUR
  languages:
    - nl
  decimal_separator: ','
  replace:
    - ['é' ,'€']
    - ['L.p.9.' ,'LPG']
    - ['L.P.G.' ,'LPG']
    - ['L.P.9.' ,'LPG']
    - ['L.P.\s' ,'LPG']
    - ['LPLG' ,'LPG']
    - ['Contant' ,'CONTANT']
    - ['\s[l|&|@]' ,' ℓ']
    - ['B.W', 'BTW']
    - [', ', ',']
    - ['°', ' ']
    - ['©', ' ']
    - [',.', ',']
    - ['(\s)([0-9]+)\.([0-9]{2})(\s)', '\1\2,\3\4'] # workaround for ocr inconsistancy on comma and dot detection
#    - ['Euro 95 E10' ,'E10 (Euro 95)']
# $'	Insert after matched string
